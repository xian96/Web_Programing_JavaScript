const mongoCollections = require("./mongoCollections");
const todoItem = mongoCollections.todoItems;

async function createTask(title, description) {
    if (!title) throw "You must provide a title";

    if (!description || typeof description !== 'string')
        throw "You must provide an description in string";

    const todoItemCollection = await todoItem();

    let newTodoItem = {
        // _id: "generated by MongoDB",
        title: title,
        description: description,
        completed: false,
        completedAt: null
    }

    const insertInfo = await todoItemCollection.insertOne(newTodoItem);
    if (insertInfo.insertedCount === 0)
        throw "Could not create newTodoItem";

    const newId = insertInfo.insertedId;

    const task = await this.getTask(newId);
    return task;
}
async function getAllTasks() {
    const todoItemCollection = await todoItem();

    const todoList = await todoItemCollection.find({}).toArray();//.find({}) what is this mean?

    return todoList;
}
async function getTask(id) {
    if (!id)
        throw "You must provide an id to search for";
    if (typeof id === 'string') {// you'll have to convert into ObjectID 
    id = ObjectId(id);
    }

    const todoItemCollection = await todoItem();
    const task = await todoItemCollection.findOne({ _id: id });
    if (task === null)
        throw "No todoItem with that id";

    return task;
}
async function completeTask(taskId) {
    if (!id)
        throw "You must provide an id to search for";
    if (typeof id === 'string') {// you'll have to convert into ObjectID 
        id = ObjectId(id);
    }

    const todoItemCollection = await todoItem();
    // const todoItem = await todoItemCollection.findOne({ _id: objId });
    const updatedTask = {
        // title: title,
        // description: description,
        completed: true,
        completedAt: new Date()
    };

    const updateInfo = await todoItemCollection.updateOne({ _id: id }, updatedTask);
    if (updateInfo.modifiedCount === 0) {
        throw "could not update todoItem successfully";
    }

    return await this.getTask(id);
}
async function removeTask(id) {
    if (!id) 
        throw "You must provide an id to search for";
    if (typeof id === 'string') {// you'll have to convert into ObjectID 
        id = ObjectId(id);
        // console.log(typeof id);
    }
    else throw `${id} error`;

    const todoItemCollection = await todoItem();

    const removed = await this.getTask(id);
    const deletionInfo = await todoItemCollection.removeOne({ _id: id });//deleteOne?remove?delete? method i don't have here

    if (deletionInfo.deletedCount === 0) {
        throw `Could not delete task with id of ${id}`;
    }

    return removed;
}

module.exports ={
    createTask,getAllTasks,getTask,completeTask,removeTask
}